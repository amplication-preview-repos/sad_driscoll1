/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PostAnalytics as PrismaPostAnalytics } from "@prisma/client";

export class PostAnalyticsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PostAnalyticsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.postAnalytics.count(args);
  }

  async postAnalyticsItems<T extends Prisma.PostAnalyticsFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.PostAnalyticsFindManyArgs>
  ): Promise<PrismaPostAnalytics[]> {
    return this.prisma.postAnalytics.findMany<Prisma.PostAnalyticsFindManyArgs>(
      args
    );
  }
  async postAnalytics<T extends Prisma.PostAnalyticsFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.PostAnalyticsFindUniqueArgs>
  ): Promise<PrismaPostAnalytics | null> {
    return this.prisma.postAnalytics.findUnique(args);
  }
  async createPostAnalytics<T extends Prisma.PostAnalyticsCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PostAnalyticsCreateArgs>
  ): Promise<PrismaPostAnalytics> {
    return this.prisma.postAnalytics.create<T>(args);
  }
  async updatePostAnalytics<T extends Prisma.PostAnalyticsUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PostAnalyticsUpdateArgs>
  ): Promise<PrismaPostAnalytics> {
    return this.prisma.postAnalytics.update<T>(args);
  }
  async deletePostAnalytics<T extends Prisma.PostAnalyticsDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.PostAnalyticsDeleteArgs>
  ): Promise<PrismaPostAnalytics> {
    return this.prisma.postAnalytics.delete(args);
  }
}
